.TH "NETCONF rpc" 3 "Wed May 2 2012" "Version 0.1.0" "libnetconf" \" -*- nroff -*-
.ad l
.nh
.SH NAME
NETCONF rpc \- 
.PP
libnetconf's functions for handling NETCONF <rpc> messages\&.  

.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef struct nc_msg \fBnc_rpc\fP"
.br
.RI "\fIrpc message\&. \fP"
.in -1c
.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum \fBNC_FILTER_TYPE\fP { \fBNC_FILTER_SUBTREE\fP }"
.br
.RI "\fIEnumeration of supported NETCONF filter types\&. \fP"
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBnc_msgid\fP \fBnc_session_send_rpc\fP (struct nc_session *session, \fBnc_rpc\fP *rpc)"
.br
.RI "\fISend <rpc> request via specified NETCONF session\&. \fP"
.ti -1c
.RI "\fBnc_reply\fP * \fBnc_session_send_recv\fP (struct nc_session *session, \fBnc_rpc\fP *rpc)"
.br
.RI "\fISend <rpc> and receive <rpc-reply> via the specified NETCONF session\&. \fP"
.ti -1c
.RI "struct nc_filter * \fBnc_filter_new\fP (\fBNC_FILTER_TYPE\fP type, char *filter)"
.br
.RI "\fICreate new NETCONF filter of the specified type\&. \fP"
.ti -1c
.RI "void \fBnc_filter_free\fP (struct nc_filter *filter)"
.br
.RI "\fIDestroy filter structure\&. \fP"
.ti -1c
.RI "void \fBnc_rpc_free\fP (\fBnc_rpc\fP *rpc)"
.br
.RI "\fIFree rpc message\&. \fP"
.ti -1c
.RI "\fBnc_rpc\fP * \fBnc_rpc_copyconfig\fP (\fBNC_DATASTORE_TYPE\fP source, \fBNC_DATASTORE_TYPE\fP target, const char *data)"
.br
.RI "\fICreate <copy-config> NETCONF rpc message\&. \fP"
.ti -1c
.RI "\fBnc_rpc\fP * \fBnc_rpc_deleteconfig\fP (\fBNC_DATASTORE_TYPE\fP target)"
.br
.RI "\fICreate <delete-config> NETCONF rpc message\&. \fP"
.ti -1c
.RI "\fBnc_rpc\fP * \fBnc_rpc_editconfig\fP (\fBNC_DATASTORE_TYPE\fP target, \fBNC_EDIT_DEFOP_TYPE\fP default_operation, \fBNC_EDIT_ERROPT_TYPE\fP error_option, const char *data)"
.br
.RI "\fICreate <edit-config> NETCONF rpc message\&. \fP"
.ti -1c
.RI "\fBnc_rpc\fP * \fBnc_rpc_get\fP (struct nc_filter *filter)"
.br
.RI "\fICreate <get> NETCONF rpc message\&. \fP"
.ti -1c
.RI "\fBnc_rpc\fP * \fBnc_rpc_getconfig\fP (\fBNC_DATASTORE_TYPE\fP source, struct nc_filter *filter)"
.br
.RI "\fICreate <get-config> NETCONF rpc message\&. \fP"
.ti -1c
.RI "\fBnc_rpc\fP * \fBnc_rpc_killsession\fP (const char *kill_sid)"
.br
.RI "\fICreate <kill-session> NETCONF rpc message\&. \fP"
.ti -1c
.RI "\fBnc_rpc\fP * \fBnc_rpc_lock\fP (\fBNC_DATASTORE_TYPE\fP target)"
.br
.RI "\fICreate <lock> NETCONF rpc message\&. \fP"
.ti -1c
.RI "\fBnc_rpc\fP * \fBnc_rpc_unlock\fP (\fBNC_DATASTORE_TYPE\fP target)"
.br
.RI "\fICreate <unlock> NETCONF rpc message\&. \fP"
.ti -1c
.RI "\fBnc_rpc\fP * \fBnc_rpc_generic\fP (const char *data)"
.br
.RI "\fICreate a generic NETCONF rpc message with specified content\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 
libnetconf's functions for handling NETCONF <rpc> messages\&. 


.SH "Typedef Documentation"
.PP 
.SS "typedef struct nc_msg \fBnc_rpc\fP"

.PP
rpc message\&. 
.PP
Definition at line 49 of file netconf\&.h\&.
.SH "Enumeration Type Documentation"
.PP 
.SS "enum \fBNC_FILTER_TYPE\fP"

.PP
Enumeration of supported NETCONF filter types\&. 
.PP
\fBEnumerator: \fP
.in +1c
.TP
\fB\fINC_FILTER_SUBTREE \fP\fP
NC_FILTER_SUBTREE\&. 
.PP
Definition at line 107 of file netconf\&.h\&.
.SH "Function Documentation"
.PP 
.SS "\fBnc_msgid\fP \fBnc_session_send_rpc\fP (struct nc_session *session, \fBnc_rpc\fP *rpc)"

.PP
Send <rpc> request via specified NETCONF session\&. \fBParameters:\fP
.RS 4
\fIsession\fP NETCONF session to use\&. 
.br
\fIrpc\fP RPC message to send\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
0 on error,
.br
 message-id of sent message on success\&. 
.RE
.PP

.SS "\fBnc_reply\fP* \fBnc_session_send_recv\fP (struct nc_session *session, \fBnc_rpc\fP *rpc)"

.PP
Send <rpc> and receive <rpc-reply> via the specified NETCONF session\&. \fBParameters:\fP
.RS 4
\fIsession\fP NETCONF session to use\&. 
.br
\fIrpc\fP RPC message to send\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
Received <rpc-reply>\&. 
.RE
.PP

.SS "struct nc_filter* \fBnc_filter_new\fP (\fBNC_FILTER_TYPE\fPtype, char *filter)\fC [read]\fP"

.PP
Create new NETCONF filter of the specified type\&. \fBParameters:\fP
.RS 4
\fItype\fP Type of the filter\&. 
.br
\fIfilter\fP Filter content\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
Created NETCONF filter structure\&. 
.RE
.PP

.SS "void \fBnc_filter_free\fP (struct nc_filter *filter)"

.PP
Destroy filter structure\&. \fBParameters:\fP
.RS 4
\fIfilter\fP Filter to destroy\&. 
.RE
.PP

.SS "void \fBnc_rpc_free\fP (\fBnc_rpc\fP *rpc)"

.PP
Free rpc message\&. \fBParameters:\fP
.RS 4
\fIrpc\fP rpc message to free\&. 
.RE
.PP

.SS "\fBnc_rpc\fP* \fBnc_rpc_copyconfig\fP (\fBNC_DATASTORE_TYPE\fPsource, \fBNC_DATASTORE_TYPE\fPtarget, const char *data)"

.PP
Create <copy-config> NETCONF rpc message\&. \fBParameters:\fP
.RS 4
\fIsource\fP Source configuration datastore type\&. If the NC_DATASTORE_NONE is specified, data parameter is used as the complete configuration to copy\&. 
.br
\fItarget\fP Target configuration datastore type to be replaced\&. 
.br
\fIdata\fP If the NC_DATASTORE_NONE is specified as the source, data parameter is used as the complete configuration to copy\&. For other types of source datastore, this parameter is ignored\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
Created rpc message\&. 
.RE
.PP

.SS "\fBnc_rpc\fP* \fBnc_rpc_deleteconfig\fP (\fBNC_DATASTORE_TYPE\fPtarget)"

.PP
Create <delete-config> NETCONF rpc message\&. \fBParameters:\fP
.RS 4
\fItarget\fP Target configuration datastore type to be deleted\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
Created rpc message\&. 
.RE
.PP

.SS "\fBnc_rpc\fP* \fBnc_rpc_editconfig\fP (\fBNC_DATASTORE_TYPE\fPtarget, \fBNC_EDIT_DEFOP_TYPE\fPdefault_operation, \fBNC_EDIT_ERROPT_TYPE\fPerror_option, const char *data)"

.PP
Create <edit-config> NETCONF rpc message\&. \fBParameters:\fP
.RS 4
\fItarget\fP Target configuration datastore type to be edited\&. 
.br
\fIdefault_operation\fP Default operation for this request, 0 to skip setting this parameter and use default server's ('merge') behavior\&. 
.br
\fIerror_option\fP Set reaction to an error, 0 for the server's default behavior\&. 
.br
\fIdata\fP edit-config operation request description\&. The content of this parameter is sent to server as a content of the <config> element\&.
.RE
.PP
\fBReturns:\fP
.RS 4
Created rpc message\&. 
.RE
.PP

.SS "\fBnc_rpc\fP* \fBnc_rpc_get\fP (struct nc_filter *filter)"

.PP
Create <get> NETCONF rpc message\&. \fBParameters:\fP
.RS 4
\fIfilter\fP NETCONF filter or NULL if no filter required\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
Created rpc message\&. 
.RE
.PP

.SS "\fBnc_rpc\fP* \fBnc_rpc_getconfig\fP (\fBNC_DATASTORE_TYPE\fPsource, struct nc_filter *filter)"

.PP
Create <get-config> NETCONF rpc message\&. \fBParameters:\fP
.RS 4
\fIsource\fP Source configuration datastore type being queried\&. 
.br
\fIfilter\fP NETCONF filter or NULL if no filter required\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
Created rpc message\&. 
.RE
.PP

.SS "\fBnc_rpc\fP* \fBnc_rpc_killsession\fP (const char *kill_sid)"

.PP
Create <kill-session> NETCONF rpc message\&. \fBParameters:\fP
.RS 4
\fIkill_sid\fP ID of session to kill\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
Created rpc message\&. 
.RE
.PP

.SS "\fBnc_rpc\fP* \fBnc_rpc_lock\fP (\fBNC_DATASTORE_TYPE\fPtarget)"

.PP
Create <lock> NETCONF rpc message\&. \fBParameters:\fP
.RS 4
\fItarget\fP Target configuration datastore type to be locked\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
Created rpc message\&. 
.RE
.PP

.SS "\fBnc_rpc\fP* \fBnc_rpc_unlock\fP (\fBNC_DATASTORE_TYPE\fPtarget)"

.PP
Create <unlock> NETCONF rpc message\&. \fBParameters:\fP
.RS 4
\fItarget\fP Target configuration datastore type to be unlocked\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
Created rpc message\&. 
.RE
.PP

.SS "\fBnc_rpc\fP* \fBnc_rpc_generic\fP (const char *data)"

.PP
Create a generic NETCONF rpc message with specified content\&. Function gets data parameter and envelope it into <rpc> container\&. Caller is fully responsible for the correctness of the given data\&.
.PP
\fBParameters:\fP
.RS 4
\fIdata\fP XML content of the <rpc> request to be sent\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
Created rpc message\&. 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for libnetconf from the source code\&.
