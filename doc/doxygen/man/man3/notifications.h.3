.TH "src/notifications.h" 3 "Fri Sep 14 2012" "Version 0.1.3" "libnetconf" \" -*- nroff -*-
.ad l
.nh
.SH NAME
src/notifications.h \- 
.PP
Functions to handle NETCONF Notifications\&.  

.SH SYNOPSIS
.br
.PP
\fC#include 'netconf\&.h'\fP
.br

.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum \fBNC_NTF_EVENT\fP { \fBNC_NTF_ERROR\fP =  -1, \fBNC_NTF_GENERIC\fP =  0, \fBNC_NTF_BASE_CFG_CHANGE\fP =  1, \fBNC_NTF_BASE_CPBLT_CHANGE\fP =  2, \fBNC_NTF_BASE_SESSION_START\fP =  3, \fBNC_NTF_BASE_SESSION_END\fP =  4, \fBNC_NTF_BASE_CONFIRMED_COMMIT\fP =  5 }"
.br
.RI "\fIEnumeration of supported NETCONF event notifications\&. \fP"
.ti -1c
.RI "enum \fBNC_NTF_EVENT_BY\fP { \fBNC_NTF_EVENT_BY_SERVER\fP, \fBNC_NTF_EVENT_BY_USER\fP }"
.br
.RI "\fIEnumeration of possible source of events\&. \fP"
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "int \fBnc_ntf_streams_init\fP (void)"
.br
.RI "\fIInitiate NETCONF Event Streams\&. \fP"
.ti -1c
.RI "void \fBnc_ntf_streams_close\fP (void)"
.br
.RI "\fIClose all NETCONF Event Streams\&. \fP"
.ti -1c
.RI "void \fBnc_ntf_free\fP (\fBnc_ntf\fP *ntf)"
.br
.RI "\fIFree notification message\&. \fP"
.ti -1c
.RI "int \fBnc_ntf_stream_new\fP (const char *name, const char *desc, int replay)"
.br
.RI "\fICreate new NETCONF event stream\&. \fP"
.ti -1c
.RI "char ** \fBnc_ntf_stream_list\fP (void)"
.br
.RI "\fIGet the list of NETCONF event notifications streams\&. \fP"
.ti -1c
.RI "int \fBnc_ntf_stream_avail\fP (const char *name)"
.br
.RI "\fITest if the given stream is already created and available\&. \fP"
.ti -1c
.RI "int \fBnc_ntf_event_new\fP (char *stream, \fBNC_NTF_EVENT\fP event,\&.\&.\&.)"
.br
.RI "\fIStore new event into the specified stream\&. Parameters are specific for different events\&. \fP"
.ti -1c
.RI "long long int \fBnc_ntf_dispatch\fP (struct nc_session *session, const \fBnc_rpc\fP *subscribe_rpc)"
.br
.RI "\fIStart sending of notification according to the given <create-subscription> NETCONF RPC request\&. All events from the specified stream are processed and sent to the client until the stop time is reached or until the session is terminated\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 
Functions to handle NETCONF Notifications\&. 

\fBAuthor:\fP
.RS 4
Radek Krejci rkrejci@cesnet.cz Copyright (C) 2012 CESNET, z\&.s\&.p\&.o\&.
.RE
.PP
Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:
.IP "1." 4
Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer\&.
.IP "2." 4
Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution\&.
.IP "3." 4
Neither the name of the Company nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission\&.
.PP
.PP
ALTERNATIVELY, provided that this notice is retained in full, this product may be distributed under the terms of the GNU General Public License (GPL) version 2 or later, in which case the provisions of the GPL apply INSTEAD OF those given above\&.
.PP
This software is provided ``as is, and any express or implied warranties, including, but not limited to, the implied warranties of merchantability and fitness for a particular purpose are disclaimed\&. In no event shall the company or contributors be liable for any direct, indirect, incidental, special, exemplary, or consequential damages (including, but not limited to, procurement of substitute goods or services; loss of use, data, or profits; or business interruption) however caused and on any theory of liability, whether in contract, strict liability, or tort (including negligence or otherwise) arising in any way out of the use of this software, even if advised of the possibility of such damage\&. 
.PP
Definition in file \fBnotifications\&.h\fP\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for libnetconf from the source code\&.
