#
# Copyright (c) 2011 CESNET
#
# LICENSE TERMS
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in
#    the documentation and/or other materials provided with the
#    distribution.
# 3. Neither the name of the Company nor the names of its contributors
#    may be used to endorse or promote products derived from this
#    software without specific prior written permission.
#
# ALTERNATIVELY, provided that this notice is retained in full, this
# product may be distributed under the terms of the GNU General Public
# License (GPL) version 2 or later, in which case the provisions
# of the GPL apply INSTEAD OF those given above.
#
# This software is provided ``as is'', and any express or implied
# warranties, including, but not limited to, the implied warranties of
# merchantability and fitness for a particular purpose are disclaimed.
# In no event shall the company or contributors be liable for any
# direct, indirect, incidental, special, exemplary, or consequential
# damages (including, but not limited to, procurement of substitute
# goods or services; loss of use, data, or profits; or business
# interruption) however caused and on any theory of liability, whether
# in contract, strict liability, or tort (including negligence or
# otherwise) arising in any way out of the use of this software, even
# if advised of the possibility of such damage.
#
# $Id$
#

# Process this file with autoconf to produce a configure script.
AC_INIT([libnetconf], m4_esyscmd([cut -f1 ./VERSION | tr -d '\n']))

m4_include([m4/ax_pthread.m4])

AC_CANONICAL_HOST

PACKAGE_VERSION=`cut -f1 ./VERSION | tr -d '\n'`
AC_SUBST(PACKAGE_VERSION)

RELEASE=1
AC_SUBST(RELEASE)

if test "`git show > /dev/null 2>&1;echo $?`" = "0"; then
        CPPFLAGS="$CPPFLAGS -DRCSID=\\\"\$(IDGIT)\\\""
else
        CPPFLAGS="$CPPFLAGS -DRCSID=\\\"\$(IDNOGIT)\\\""
fi

USERNAME=`git config --get user.name`
USERMAIL=`git config --get user.email`
AC_SUBST(USERNAME)
AC_SUBST(USERMAIL)

CONFIGURE_PWD=`pwd`
AC_SUBST(CONFIGURE_PWD)

NC_WORKINGDIR_PATH="/var/lib/$PACKAGE_NAME/"
SERVERCFG_PATH="/var/lib/$PACKAGE_NAME/server/"
SETBIT=0
SETUSER=""
SETGROUP=""
CONFIGURE_ARGS=""

LIBS="$LIBS -lrt -lutil"

# Check for pkg-config.
AC_PATH_PROG(PKG_CONFIG, pkg-config, no)
if test "x$PKG_CONFIG" = "xno"; then
	AC_MSG_ERROR(['pkgconfig' not found.])
fi

AC_ARG_WITH([libxml2],
	[AC_HELP_STRING([--with-libxml2], [specific libxml2 location])],
	[
		AC_CHECK_PROG([XML2_CONFIG], [xml2-config], [yes], [no], [$withval])
		if test "$XML2_CONFIG" = "no"; then
			AC_MSG_ERROR([Missing development package of libxml2.])
		fi
		CFLAGS="`$withval/xml2-config --cflags` $CFLAGS"
		LDFLAGS="`$withval/xml2-config --libs` $LDFLAGS"
		WITH_LIBXML2="$withval"
		CONFIGURE_ARGS="--with-libxml2=$withval $CONFIGURE_ARGS"
	]
)

AC_ARG_WITH([libssh2],
	[AS_HELP_STRING([--with-libssh2=DIR], [Specifies libssh2 installation directory.])],
	[
		CFLAGS="-I$withval/include $CFLAGS"
		LDFLAGS="-L$withval/lib -Wl,-rpath,$withval/lib $LDFLAGS"
	]
)

AC_ARG_ENABLE([libssh2],
	AC_HELP_STRING([--disable-libssh2], [Use ssh client program instead of libssh2.]),
	if test "$enableval" = "no"; then
		libssh2="no"
		CPPFLAGS="$CPPFLAGS -DDISABLE_LIBSSH"
	else
		libssh2="yes"
	fi
	,
	# use libssh2 by default
	libssh2="yes"
)

AC_ARG_ENABLE([notifications],
	AC_HELP_STRING([--disable-notifications], [Disable support of NETCONF Notifications (RFC 5277)]),
	[
	if test "$enableval" = "no"; then
		notif="no"
	else
		notif="yes"
	fi
	],
	# notifications are supported by default
	notif="yes"
)

if test "$notif" = "yes"; then
	HDRS_PUBL_SUBDIR_NOTIFICATIONS="src/notifications.h src/notifications_xml.h"
	HDRS_PRIV_NOTIFICATIONS="src/notifications.h src/notifications_xml.h"
	SRCS_NOTIFICATIONS="src/notifications.c"
	[INCLUDE_NOTIFICATIONS="#include \"libnetconf/notifications.h\""]
	[INCLUDE_NOTIFICATIONS_XML="#include \"libnetconf/notifications_xml.h\""]
	PROVIDES="$PROVIDES libnetconf-notifications"
else
	CONFIGURE_PARAMS="$CONFIGURE_PARAMS --disable-notifications"
	CPPFLAGS="$CPPFLAGS -DDISABLE_NOTIFICATIONS"
	HDRS_PUBL_SUBDIR_NOTIFICATIONS=""
	HDRS_PRIV_NOTIFICATIONS=""
	SRCS_NOTIFICATIONS=""	
	[INCLUDE_NOTIFICATIONS="#define DISABLE_NOTIFICATIONS"]
	[INCLUDE_NOTIFICATIONS_XML="#define DISABLE_NOTIFICATIONS"]
fi

AC_ARG_WITH([examples],
	[AC_HELP_STRING([--with-examples], [Enable building example applications, they respect --with-suid and --with-sgid options])],
	[
		SUBDIRS="./examples/client/ ./examples/server/"
		if test "$notif" = "yes"; then
			# enable compilation of netconf-events tool
			SUBDIRS="$SUBDIRS ./examples/tools/"
		fi
	],
	[SUBDIRS=""]
)

AC_ARG_ENABLE([debug],
	AC_HELP_STRING([--enable-debug],[Compile with debug options]),
	CFLAGS="$CFLAGS -g -DDEBUG",
	CFLAGS="$CFLAGS -O3"
	CONFIGURE_ARGS="--enable-debug $CONFIGURE_ARGS"
)
AC_ARG_ENABLE([debug-threads],
	AC_HELP_STRING([--enable-debug-threads],[Extend debug mode for threads]),
	CPPFLAGS="$CPPFLAGS -DDEBUG_THREADS"
)
AC_ARG_WITH([ncworkingdirpath],
	AC_HELP_STRING([--with-ncworkingdirpath=path],[Path to a working directory of libnetconf, where all the system files are stored, the default value is /var/lib/libnetconf/]),
	NC_WORKINGDIR_PATH="$withval"
)
AC_ARG_WITH([servercfgpath],
	AC_HELP_STRING([--with-servercfgpath=path],[Path to example server configuration files, the default value is /var/lib/libnetconf/server/]),
	SERVERCFG_PATH="$withval"
)
AC_ARG_WITH([suid],
	AC_HELP_STRING([--with-suid=user],[When creating files or directories using libnetconf, rely on the SUID bit set and change their ownership to the specified user]),
	if test "$withval" != "no"; then
		SETBIT=$(($SETBIT | 1))
		if test "$withval" != "yes"; then
			SETUSER="$withval"
		else
			SETUSER="`id -un`"
		fi		
	fi
)
AC_ARG_WITH([sgid],
	AC_HELP_STRING([--with-sgid=group],[When creating files or directories using libnetconf, rely on the SGID bit set and change their ownership to the specified group]),
	if test "$withval" != "no"; then
		SETBIT=$(($SETBIT | 2))
		if test "$withval" != "yes"; then
			SETGROUP="$withval"
		else
			SETGROUP="`id -gn`"
		fi		
	fi	
)
AC_ARG_WITH([nacm-recovery-uid],
	AC_HELP_STRING([--with-nacm-recovery-uid=uid], [Set UID to be used to identify NACM recovery session, default value is 0.]),
	[
	if test -z "$withval"; then
		NACM_RECOVERY_UID="0"
	elif expr "$withval" : "-\?[[0-9]]\+$" > /dev/null ; then
		NACM_RECOVERY_UID="$withval"
	else
		AC_MSG_ERROR([Invalid NACM recovey UID. The value must be a valid number.])
	fi
	],
	NACM_RECOVERY_UID="0"
)

############################ Check for programs ################################

# Check for architecture, only x86 and x86_64 are supported
if test -z "$host_cpu";
then
	AC_CHECK_PROG([UNAME], [uname], [yes], [no])
	if test "$UNAME" = "no"; then
		AC_MSG_ERROR(["uname not found!"])
	fi
	build_cpu=`uname -m`
	host_cpu=$build_cpu
fi
AC_MSG_CHECKING([for host architecture])
case $host_cpu in
    i?86 )
	AC_MSG_RESULT($host_cpu is supported)
	;;
    x86_64 )
	AC_MSG_RESULT($host_cpu is supported)
        ;;
    * )
        AC_MSG_WARN([unsupported architecture $host_cpu])
        ;;
esac

if test "$libssh2" = "no"; then
	# ssh for NETCONF connection
	AC_PATH_PROG([SSH_PROG], [ssh], ["missing"])
	if test "$SSH_PROG" = "missing"; then
		AC_MSG_ERROR([Missing ssh client (install OpenSSH)])
	fi
fi

# Check for doxygen
AC_CHECK_PROG(DOXYGEN, doxygen, doxygen, no)

# Check for rpmbuild
AC_CHECK_PROG(RPMBUILD, rpmbuild, rpmbuild, no)

# Check for standard programs
AC_PROG_CC
AC_PROG_CPP
AC_PROG_LN_S
AC_PROG_INSTALL

############################ Check for libraries ###############################
export PKG_CONFIG_PATH=/usr/local/${libdir##*/}/pkgconfig:$PKG_CONFIG_PATH

### LibXML2 ###
if test -z "$WITH_LIBXML2" ; then
	AC_CHECK_PROG([XML2_CONFIG], [xml2-config], [yes], [no], [$WITH_LIBXML2 $PATH])
	if test "$XML2_CONFIG" = "no"; then
		AC_MSG_ERROR([Missing development package of libxml2.])
	fi
	CFLAGS="`xml2-config --cflags` $CFLAGS"
	LDFLAGS="`xml2-config --libs` $LDFLAGS"
fi

if test "$libssh2" = "yes"; then
	### libssh2 ###
	AC_CHECK_LIB([ssh2], [libssh2_version], [], AC_MSG_ERROR([Missing libssh2.]))
	AC_CHECK_HEADERS([libssh2.h], [], AC_MSG_ERROR([Missing libssh2 headers.]))
	PKG_CHECK_MODULES([LIBSSH2_HANDSHAKE], [libssh2 >= "1.2.8"], [LIBSSH2_SESSION_HANDSHAKE="libssh2_session_handshake"],[LIBSSH2_SESSION_HANDSHAKE="libssh2_session_startup"])
	PKG_CHECK_MODULES([LIBSSH2_TIMEOUT], [libssh2 >= "1.2.9"], [LIBSSH2_SET_TIMEOUT="libssh2_session_set_timeout(session,timeout)"],[LIBSSH2_SET_TIMEOUT=""])
	AC_SUBST(LIBSSH2_SESSION_HANDSHAKE)
	AC_SUBST(LIBSSH2_SET_TIMEOUT)
fi

if test -n "$SUBDIRS"; then
	### libreadline ###
	AC_CHECK_LIB([readline], [readline], 
		LIBS="$LIBS", # prevent adding -lreadline to LIBS
		AC_MSG_ERROR([Missing libreadline])
	)
	AC_CHECK_HEADERS(readline/readline.h readline/history.h, [], AC_MSG_ERROR([Missing libreadline headers.]))

	### libevent ###
	AC_CHECK_LIB([event], [event_base_dispatch],
		LIBS="$LIBS", # prevent adding -levent to LIBS
		AC_MSG_ERROR([Missing libevent])
	)
	AC_CHECK_HEADERS(event2/event.h, [], AC_MSG_ERROR([Missing libevent headers.]))
fi

### pthread ###
AX_PTHREAD([
	LIBS="$PTHREAD_LIBS $LIBS"
	CFLAGS="$CFLAGS $PTHREAD_CFLAGS"
	CC="$PTHREAD_CC"], AC_MSG_ERROR([Missing POSIX threads support.]))
#AC_CHECK_LIB([pthread], [pthread_create], [], AC_MSG_ERROR([Missing POSIX threads library.]))
#AC_CHECK_HEADERS([pthread.h], [], AC_MSG_ERROR([Missing POSIX threads headers.]))
	
if test "$notif" = "yes"; then
	### libdbus ###
	PKG_CHECK_MODULES([DBUS], [dbus-1 >= 1.0.0])
	DBUS_CONFDIR="`pkg-config --variable=sysconfdir dbus-1`/dbus-1/"
	DBUS_NOTIFICATION_CONF="$DBUS_CONFDIR/system.d/libnetconf.notifications.conf"
	
	CFLAGS="$CFLAGS $DBUS_CFLAGS"
	LIBS="$LIBS $DBUS_LIBS"
fi

###################### Check for configure parameters ##########################

######################### Checks for header files ##############################
AC_CHECK_HEADERS([fcntl.h limits.h netdb.h stddef.h stdint.h stdlib.h string.h sys/socket.h termios.h unistd.h utmpx.h], [], AC_MSG_ERROR([Missing system headers.]))

######## Checks for typedefs, structures, and compiler characteristics #########
AC_CHECK_HEADER_STDBOOL
AC_TYPE_UID_T
AC_TYPE_INT32_T
AC_TYPE_MODE_T
AC_TYPE_OFF_T
AC_TYPE_PID_T
AC_TYPE_SIZE_T
AC_TYPE_SSIZE_T
AC_TYPE_UINT16_T
AC_TYPE_UINT64_T
AC_TYPE_UINT8_T

######################## Checks for library functions ##########################
AC_FUNC_MALLOC
AC_FUNC_MMAP
AC_FUNC_REALLOC
AC_CHECK_FUNCS([ftruncate memset mkdir munmap socket strchr strdup strerror strrchr strstr strtol strtoul])
if test "$libssh2" = "no"; then
	AC_CHECK_FUNCS([dup2])
fi
AC_CHECK_FUNC([eaccess], [HAVE_EACCESS="#define HAVE_EACCESS"], [HAVE_EACCESS="#undef HAVE_EACCESS"] )

############################### Set output #####################################
AC_SUBST(V_SHLIB_CMD)
AC_SUBST(V_SHLIB_OPT)
AC_SUBST(V_SONAME_OPT)
AC_SUBST(NACM_RECOVERY_UID)
AC_SUBST(BUILDREQS)
AC_SUBST(REQS)
AC_SUBST(PROVIDES)
AC_SUBST(DISTRO)
AC_SUBST(SUBDIRS)
AC_SUBST(NC_WORKINGDIR_PATH)
AC_SUBST(SERVERCFG_PATH)
AC_SUBST(SETBIT)
AC_SUBST(SETUSER)
AC_SUBST(SETGROUP)
AC_SUBST(DBUS_CONFDIR)
AC_SUBST(DBUS_NOTIFICATION_CONF)
AC_SUBST(HDRS_PUBL_SUBDIR_NOTIFICATIONS)
AC_SUBST(HDRS_PRIV_NOTIFICATIONS)
AC_SUBST(SRCS_NOTIFICATIONS)
AC_SUBST(INCLUDE_NOTIFICATIONS)
AC_SUBST(INCLUDE_NOTIFICATIONS_XML)
AC_SUBST(CONFIGURE_PARAMS)
AC_SUBST(HAVE_EACCESS)
AC_SUBST(SSH_PROG)
AC_SUBST(CONFIGURE_ARGS)

AC_SUBST(DOXYGEN)
if test -z "$DOXYGEN"; then
	AC_MSG_WARN([Due to missing doxygen you will not able to generate Doxygen documentation.])
fi

AC_SUBST(RPMBUILD)
if test -z "$RPMBUILD"; then
	AC_MSG_WARN([Due to missing rpmbuild you will not able to generate RPM package.])
fi

AC_CONFIG_FILES(Makefile src/config.h libnetconf.spec libnetconf.pc Doxyfile)
AC_CONFIG_FILES(headers/libnetconf.h headers/libnetconf_xml.h)
if test -n "$SUBDIRS"; then
	AC_CONFIG_FILES(examples/client/Makefile examples/server/Makefile examples/tools/Makefile)
fi

AC_OUTPUT
